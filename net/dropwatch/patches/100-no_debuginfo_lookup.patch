diff --git a/src/Makefile b/src/Makefile
index 5bc6aaa..108f278 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -2,10 +2,10 @@ all: dropwatch
 
 CPPFLAGS += -D_GNU_SOURCE
 CFLAGS += -g -Wall -Werror $(shell pkg-config --cflags libnl-3.0)
-LDLIBS += -lbfd -lreadline -lnl-3 -lnl-genl-3
+LDLIBS += -lreadline -lnl-3 -lnl-genl-3
 
 OBJFILES := main.o lookup.o\
-	 lookup_bfd.o lookup_kas.o
+	 lookup_kas.o
 
 dropwatch: $(OBJFILES) 
 	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@
diff --git a/src/lookup.c b/src/lookup.c
index ba54991..5f0d557 100644
--- a/src/lookup.c
+++ b/src/lookup.c
@@ -27,7 +27,6 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <sys/utsname.h>
-#include <bfd.h>
 #include <string.h>
 #include <unistd.h>
 #include <sys/types.h>
@@ -35,7 +34,6 @@
 
 #include "lookup.h"
 
-extern struct lookup_methods bfd_methods;
 extern struct lookup_methods kallsym_methods;
 
 static int lookup_null_init(void)
@@ -71,18 +69,6 @@ int init_lookup(lookup_init_method_t method)
  		 */
 		methods = &null_methods;
 		break;
-	case METHOD_AUTO:
-		methods = &bfd_methods;
-		if (methods->lookup_init() == 0)
-			return 0;
-		methods = &kallsym_methods;
-		if (methods->lookup_init() == 0)
-			return 0;
-		methods = NULL;
-		return -1;
-	case METHOD_DEBUGINFO:
-		methods = &bfd_methods;
-		break;
 	case METHOD_KALLSYMS:
 		methods = &kallsym_methods;
 		break;
diff --git a/src/lookup.h b/src/lookup.h
index e6568d8..15b70cb 100644
--- a/src/lookup.h
+++ b/src/lookup.h
@@ -43,8 +43,6 @@
  */
 typedef enum {
 	METHOD_NULL = 0,
-	METHOD_AUTO,
-	METHOD_DEBUGINFO,
 	METHOD_KALLSYMS
 } lookup_init_method_t;
 
diff --git a/src/lookup_bfd.c b/src/lookup_bfd.c
deleted file mode 100644
index cc7010b..0000000
--- a/src/lookup_bfd.c
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2009, Neil Horman <nhorman@redhat.com>
- * 
- * This program file is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License as published by the
- * Free Software Foundation; version 2 of the License.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- * for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program in a file named COPYING; if not, write to the
- * Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor,
- * Boston, MA 02110-1301 USA
- */
-
-/*
- * This is a translator.  given an input address, this will convert it into a
- * symbollic name using the bfd library
- */
-
-#include <stdlib.h>
-#include <stdio.h>
-#include <sys/utsname.h>
-#include <bfd.h>
-#include <string.h>
-#include <unistd.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-
-#include "lookup.h"
-
-
-static int lookup_bfd_init(void)
-{
-	struct utsname uts;
-	struct stat sb;
-	char *dbibuf;
-
-	/*
-	*Start by determining if we have the required debuginfo package
-	*here
-	*/
-	if(uname(&uts)<0)
-		return-1;
-
-	dbibuf = malloc(strlen("/usr/lib/debug/lib/modules") + strlen(uts.release) + 1);
-	sprintf(dbibuf,"/usr/lib/debug/lib/modules/%s", uts.release);
-	if (stat(dbibuf,&sb) < 0) {
-		free(dbibuf);
-		goto out_fail;
-	}
-
-	free(dbibuf);
-
-
-	bfd_init();
-	return 0;
-
-out_fail:
-	return-1;
-}
-
-static int lookup_bfd_sym(void *pc, struct loc_result *location)
-{
-	return 1;
-}
-
-struct lookup_methods bfd_methods = {
-	lookup_bfd_init,
-	lookup_bfd_sym,
-};
diff --git a/src/lookup_kas.c b/src/lookup_kas.c
index 16e639f..1b87c67 100644
--- a/src/lookup_kas.c
+++ b/src/lookup_kas.c
@@ -25,7 +25,6 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <sys/utsname.h>
-#include <bfd.h>
 #include <string.h>
 #include <unistd.h>
 #include <sys/types.h>
